library (Biobase)
library(marray)
library (limma)
library(RColorBrewer)
library(MASS)
library(gplots)
library(heatmap.plus)


targets<-read.csv(file="targets.csv", header=T)
 

labls<- paste(targets$CELL_LINE, targets$SCV_GROUP, targets$UNIQUE_PERSON_ID_FOR_THIS_STUDY, sep="_")

phD <- targets[,c(24,11)]
rownames(phD)<-labls

metadata<-data.frame(labelDescription=c("CELL_LINE", "SCV_GROUP"), row.names= c("CELL_LINE", "SCV_GROUP"))

pD<-new("AnnotatedDataFrame",data=phD, varMetadata=metadata)


###reading the dataset

data<-read.ilmn (files="Armin Raznahan_Replicate 2_Sample_Probe_Profile.txt", expr="AVG_Signal", other.columns="Detection", sep="\t", quote="\"", verbose=TRUE)


colnames(data$E)
 

##order is the same as targets file

raw_data<-data$E
colnames(raw_data)
 

detsco<- data$other$Detection
colnames(detsco)

colnames(raw_data)<-labls
colnames(detsco)<-labls


mydata.notlog<- raw_data

mydata=log2(raw_data)
matriz <- as.matrix(mydata)


dim(mydata)


annot <- read.csv(file="HumanHT-12_V4_0_R1_15002873_B.csv", header=T)
dim(annot)


# signal plots

nsampl=80
   
scvgroup<-as.vector(targets$SCV_GROUP)
scvgroup [targets$SCV_GROUP =="NV_F"]<- "magenta"
scvgroup [targets$SCV_GROUP =="NV_M"]<- "brown"
scvgroup [targets$SCV_GROUP =="XO"]<- "darkmagenta"
scvgroup [targets$SCV_GROUP =="XXX"]<- "darkgreen"
scvgroup [targets$SCV_GROUP =="XXY"]<- "lightcyan"
scvgroup [targets$SCV_GROUP =="XXYY"]<- "turquoise"
scvgroup [targets$SCV_GROUP =="XYY"]<- "red"

tissue<-ifelse(targets$TISSUE.TYPE=="LCL","blue","pink")

cellline<-as.vector(targets$CELL_LINE)
cellline [targets$CELL_LINE =="AZ"]<- "green"
cellline [targets$CELL_LINE =="BL"]<- "orange"
cellline [targets$CELL_LINE =="UNC_LYM"]<- "black"

batch<-as.vector(targets$Batch)
batch[targets$Batch ==1]<- "gold4"
batch[targets$Batch ==2]<- "navy"
batch[targets$Batch ==3]<- "yellow"
batch[targets$Batch ==4]<- "purple"
batch[targets$Batch ==5]<- "grey"
batch[targets$Batch ==6]<- "pink"
batch[targets$Batch ==7]<- "cyan"

setwd("E:/STUDY/Armin/de")
jpeg("1_signal.jpg", width=1800,height=800)
par(cex.axis=0.6)
boxplot(as.data.frame(matriz),col=batch, main="Signal Not normalized", names=labls, las=3,adj=1)
dev.off()

# signal distribution plots-
jpeg("1-signal_distribution%d.jpg", width=1500,height=800)

par(mfrow=c(5,8))
for (k in 1:80){
   plot(density(mydata[,k]), main=paste("signal, ", labls[k], sep=""), cex=0.8)
}
dev.off()

jpeg("1-detsco-distribution%d.jpg", width=1500,height=800)

par(mfrow=c(5,8))
for (k in 1:80){
   plot(density(detsco[,k]), main=paste("detection, ", labls[k], sep=""), cex=0.8)
}
dev.off()


jpeg("1_detsco.jpg", width=1800,height=800)

#detection scores
par(cex.axis=0.6)
boxplot(as.data.frame(detsco),main="Detection scores",names=labls,col=batch, las=3)
abline(h=0.9, col="red")
abline(h=0.8, col="blue")
dev.off()

thresholds<-c(0.99,0.98,0.97,0.96)
pdf("1-detsco_stats.pdf",height=9,width=18)
par (mfrow = c(2,2))
for (thr in thresholds) {
apply(detsco,2,function(x)length(which(x>thr)))->detsco.table
grn<-detsco.table/nrow(mydata)
#grn<-grn[sort(names(grn))]
col<-batch
#col<-as.character(as.numeric(Samples$strain))
grn.m<-mean(grn)
grn.sd<- sd(grn)
sd1p<-grn.m+(grn.sd)
sd1m<-grn.m-(grn.sd)

sd2p<-grn.m+(grn.sd*2)
sd2m<-grn.m-(grn.sd*2)
sd3p<-grn.m+(grn.sd*3)
sd3m<-grn.m-(grn.sd*3)
    par(cex.axis=0.5)

plot(x=1:nsampl,y=grn,col=col,pch=19,xaxt="n",main=paste("Detection Threshold = ",thr,sep=""),xlab="",ylab=paste("Fraction Detected at ",thr,sep=""))
axis(1,at=1:nsampl,labels=names(grn),las=2)
#legend(x="topright",fill=unique(col),as.character(unique(Samples$Batch[order(Samples$Array)])),cex=0.9,bty="n")
abline(sd1p,0,lty=2,col=1)
abline(sd1m,0,lty=2, col=1)

abline(sd2p,0,lty=2,col=3)
abline(sd2m,0,lty=2, col=3)
abline(sd3p,0,lty=2, lwd=2,col=2)
abline(sd3m,0,lty=2,lwd=2,col=2)
text(sd1m,"1SD",pos=1)
text(sd3m,"3SD",pos=1)
text(sd2m,"2SD",pos=1)
}
dev.off()


#histogram

probes99<-apply(detsco,1,function(x)length(which(x>=0.99)))

pdf("1-detsco_hist.pdf",height=10,width=10)
hist(probes99,br=nsampl,col="blue", main="Distribution of present genes")
axis(side=4,at= length(probes99)*seq(0,0.5,0.1),labels= seq(0,50,10))
dev.off()


jpeg("1_signal_detsco%d.jpg", width=1300,height=800)

par (mfrow = c(5,8))
for(k in 1:nsampl)
plot(x=matriz[,k], y=detsco[,k],cex=0.4, main=labls[k],xlab="log2 signal",ylab="Detection score")
#detection score vs. log2 signal 

dev.off()

# signal correlation plots 

matcor<-cor(matriz)

range(as.vector (matcor))


library(heatmap.plus)
clab<-cbind(cellline,scvgroup, tissue,batch)

pdf("2_corr_heatmap_notNorm.pdf", width=10,height=10)
heatmap.plus(matcor,scale="none",col=heat.colors(40), ColSideColors=clab, cexCol=0.6,cexRow=0.6, main="Clustering Based on Inter-Array Pearson Coefficient, Not normalized")
heatmap.plus(matcor,scale="none",col=heat.colors(40), ColSideColors=clab[,-4], cexCol=0.6,cexRow=0.6, main="Clustering Based on Inter-Array Pearson Coefficient, Not normalized")
dev.off()


# signal correlation plots 

pdf("2_AIC.pdf", width=13,height=10)

IAC=cor(matriz,use="p")
cluster1=hclust(as.dist(1-IAC))
plot(cluster1, main=paste("All samples (no=",dim(IAC)[2],")"))
dev.off()

meanIAC=apply(IAC,2,mean)
sdCorr=sd(meanIAC)
numbersd=(meanIAC-mean(meanIAC))/sdCorr
y=length(IAC[1,])
x=(mean(IAC)*(y^2)-y)/((y^2)-y)
x


pdf("2_sd.pdf",width=12,height=12)

plot(numbersd, type="n", main="all samples", ylab="z-score",) 
text(numbersd, labels=labls, cex=0.7,col="red")
#abline(h=-2, col=4)
abline(h=-3, col=5)
dev.off()

lcl<-matriz[,targets$TISSUE.TYPE=="LCL"]
dim(lcl)

pdf("2_AIC_lcl.pdf", width=13,height=10)

IAC=cor(lcl,use="p")
cluster1=hclust(as.dist(1-IAC))
plot(cluster1, main=paste("lcl samples (no=",dim(IAC)[2],")"))
dev.off()

meanIAC=apply(IAC,2,mean)
sdCorr=sd(meanIAC)
numbersd=(meanIAC-mean(meanIAC))/sdCorr
y=length(IAC[1,])
x=(mean(IAC)*(y^2)-y)/((y^2)-y)
x


pdf("2_sd_lcl.pdf",width=12,height=12)

plot(numbersd, type="n", main="lcl samples", ylab="z-score",) 
text(numbersd, labels=labls, cex=0.7,col="red")
#abline(h=-2, col=4)
#abline(h=-3, col=5)
dev.off()


###LCL samples only
pdf("2_corr_heatmap_notNorm+LCL.pdf", width=10,height=10)
heatmap.plus(cor(lcl),scale="none",col=heat.colors(40), ColSideColors=clab[-c(18,46),-3], cexCol=0.7,cexRow=0.7, main="Clustering Based on Inter-Array Pearson Coefficient, Not normalized")
heatmap.plus(cor(lcl),scale="none",col=heat.colors(40), ColSideColors=clab[-c(18,46),-c(3,4)], cexCol=0.6,cexRow=0.7, main="Clustering Based on Inter-Array Pearson Coefficient, Not normalized")
dev.off()

# Outlier Exclusion

##for now keep them all, exclude thefollow=up sample
#rm 1 follow-up sample, keep all baselines, there is one sample has >3 sd, but not far from #others keep it.
 
removeSamples = match(c("AZ_XO_71fu"), colnames(matriz))


matriz.g<-matriz[,-removeSamples]
pD.g<-pD[-removeSamples]
targets.g<-targets[-removeSamples,]
labls.g<- labls[-removeSamples]
detsco.g<- detsco[,-removeSamples]
tissue.g<- tissue[-removeSamples]
cellline.g<- cellline[-removeSamples]
scvgroup.g<- scvgroup[-removeSamples]
batch.g<-batch[-removeSamples]
clab.g<-clab[-removeSamples,]



matcor.g<-cor(matriz.g)

range(as.vector (matcor.g))
# 0.8319089 1.0000000


pdf("2_corr_heatmap_notNorm_excludeFollowup.pdf", width=10,height=10)
heatmap.plus(matcor.g,scale="none",col=heat.colors(40), ColSideColors=clab.g, cexCol=0.6,cexRow=0.6, main="Not normalized, excluding AZ_XO_71fu")
heatmap.plus(matcor.g,scale="none",col=heat.colors(40), ColSideColors=clab.g[,-4], cexCol=0.6,cexRow=0.6, main="Not normalized, excluding AZ_XO_71fu")
dev.off()


# normalization

norm<-normalizeBetweenArrays(matriz.g,method="quantile")

jpeg("3_normalized_rm1.jpg", width=1500,height=800)
par(cex.axis=0.6)
boxplot(as.data.frame(norm),main="exclude AZ_XO_71fu, Quantile normalization", col= batch.g,names=labls.g, las=3)
dev.off()	
pdf("3_corr_heatmap_Norm_rm1.pdf", width=10,height=10)
heatmap.plus(cor(norm), scale="none",col=heat.colors(40),ColSideColors=clab.g[,-4], cexCol=0.6,cexRow=0.6, main="normalized, excluded AZ_XO_71fu " )

dev.off()

## normalize LCL samples only
norm.lcl<-normalizeBetweenArrays(lcl[,-67],method="quantile")
##excluding follow-up

jpeg("3_normalized_lcl.jpg", width=1500,height=800)
par(cex.axis=0.7)
boxplot(as.data.frame(norm.lcl),main="tissue LCL , Quantile normalization", col= batch.g[-c(18,46)],names=labls.g[-c(18,46)], las=3)
dev.off()
	
pdf("3_corr_heatmap_Norm_LCL.pdf", width=10,height=10)
heatmap.plus(cor(norm.lcl), scale="none",col=heat.colors(40),ColSideColors=clab.g[-c(18,46),-c(3,4)], cexCol=0.7,cexRow=0.7, main="normalized, Tissue LCL " )

dev.off()


# Creating the exprSet object

##from now on, LCL samples only, as lympho only with 2 samples

eSet <- new("ExpressionSet", exprs=norm, phenoData=pD.g)
eSet
ftdexp<-exprs(eSet)


eSet.lcl <- new("ExpressionSet", exprs=norm.lcl, phenoData=pD.g[-c(18,46)])
eSet.lcl
ftdexp.lcl<-exprs(eSet.lcl)

#Array clustering based on gene variability

###all samples
standardize <- function(z) {
  rowmed <- apply(z, 1, median)
  rowmad <- apply(z, 1, mad)
  rv <- sweep(z, 1, rowmed)
  rv <- sweep(rv, 1, rowmad, "/")
  return(rv)
}

rowMads <- apply(ftdexp, 1, mad)

ord <- order(rowMads,decreasing=TRUE)
top1000 <- ord[1:1000]
ftdexp2 <- ftdexp[top1000, ]
ftddist2 <- dist(t(standardize(ftdexp2)))

summary(ftddist2) 

ftdcl2 <- hclust(ftddist2)
ftddism2<-as.matrix(ftddist2)

top500 <- ord[1:500]
ftdexp3 <- ftdexp[top500, ]
ftddist3 <- dist(t(standardize(ftdexp3)))

ftdcl3 <- hclust(ftddist3)
ftddism3<-as.matrix(ftddist3)

#heatmaps


pdf("4_clst_heatmap_mostVariable.pdf", width=10,height=10)

heatmap.plus(ftddism2, col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main=" Top 1000 Most Variable Genes", ColSideColors= clab.g,cexRow=0.6,cexCol=0.6, scale="none")

heatmap.plus(ftddism3, col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main=" the Top 500 Most Variable Genes ", ColSideColors= clab.g,cexRow=0.6,cexCol=0.6, scale="none")
dev.off()

#---MDS-
cm1 <- cmdscale(ftddist2, eig=TRUE)
samm1 <- sammon(ftddist2, trace=FALSE)

pdf("4_MDS.pdf", width=20,height=10)
	
par(mfrow=c(1,2))
myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=scvgroup.g,pch=19, xlim=c(-80,80),...)
#check the colors in the above command

myPlot(cm1, main="SCV Group")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels="",adj=0, cex=0.7)

legend(x="topleft",legend=unique(targets.g$SCV_GROUP),col=unique(scvgroup.g),fill= unique(scvgroup.g), cex=1.2)

myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=cellline.g, pch=19, xlim=c(-80,80),...)
#check the colors in the above command

myPlot(cm1, main="Cell Line")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels="",adj=0, cex=0.7)

legend(x="topleft",legend=unique(targets.g$CELL_LINE),col=unique(cellline.g),fill= unique(cellline.g), cex=1.2)
dev.off()

###LCL only
standardize <- function(z) {
  rowmed <- apply(z, 1, median)
  rowmad <- apply(z, 1, mad)
  rv <- sweep(z, 1, rowmed)
  rv <- sweep(rv, 1, rowmad, "/")
  return(rv)
}

rowMads <- apply(ftdexp.lcl, 1, mad)

ord <- order(rowMads,decreasing=TRUE)
top1000 <- ord[1:1000]
ftdexp2 <- ftdexp.lcl[top1000, ]
ftddist2 <- dist(t(standardize(ftdexp2)))

summary(ftddist2) 

ftdcl2 <- hclust(ftddist2)
ftddism2<-as.matrix(ftddist2)

top500 <- ord[1:500]
ftdexp3 <- ftdexp.lcl[top500, ]
ftddist3 <- dist(t(standardize(ftdexp3)))

ftdcl3 <- hclust(ftddist3)
ftddism3<-as.matrix(ftddist3)

#heatmaps

clab.lcl<-clab.g[-c(18,46),-c(3,4)]

pdf("4_clst_heatmap_mostVariable_lcl.pdf", width=10,height=10)

heatmap.plus(ftddism2, col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main="LCL,  Top 1000 Most Variable Genes", ColSideColors= clab.lcl,cexRow=0.7,cexCol=0.7, scale="none")

heatmap.plus(ftddism3, col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main="LCL,  the Top 500 Most Variable Genes ", ColSideColors= clab.lcl,cexRow=0.7,cexCol=0.7, scale="none")
dev.off()

#---MDS-
cm1 <- cmdscale(ftddist2, eig=TRUE)
samm1 <- sammon(ftddist2, trace=FALSE)

pdf("4_MDS_lcl.pdf", width=20,height=10)
	
par(mfrow=c(1,2))
myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=scvgroup.g[-c(18,46)], pch=19, xlim=c(-40,40),...)
#check the colors in the above command

myPlot(cm1, main="SCV Group")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels="",adj=0, cex=0.7)

legend(x="topleft",legend=unique(targets.g$SCV_GROUP[-c(18,46)]),col=unique(scvgroup.g[-c(18,46)]),fill= unique(scvgroup.g[-c(18,46)]), cex=1.2)

myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=cellline.g[-c(18,46)], pch=19, xlim=c(-40,40),...)
#check the colors in the above command

myPlot(cm1, main="Cell Line")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels="",adj=0, cex=0.7)

legend(x="topleft",legend=unique(targets.g$CELL_LINE[-c(18,46)]),col=unique(cellline.g[-c(18,46)]),fill= unique(cellline.g[-c(18,46)]), cex=1.2)
dev.off()


### from now on LCL samples only
#  Ratio 

targets.lcl<-targets.g[targets.g$TISSUE.TYPE=="LCL",]
dim(targets.lcl)

all.samples<-as.data.frame(ftdexp.lcl)

#1. Controls, each condition as a control
nv_f <-all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "NV_F"]
nv_fMean <-rowMeans(nv_f)

xo <-all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "XO"]
xoMean <-rowMeans(xo)


#2. Exp, each condition as a treatment

nv_m <- all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "NV_M"]
xxx <- all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "XXX"]
xxy <- all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "XXY"]
xxyy <- all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "XXYY"]
xyy <- all.samples[,targets.lcl$CELL_LINE== "BL" & targets.lcl$SCV_GROUP== "XYY"]

#3. Ratios

nv_m_f<- nv_m - nv_fMean
colnames(nv_m_f)<-paste(colnames(nv_m_f), "_vs_NV_F",sep="") 
xxx_xo<- xxx - xoMean
colnames(xxx_xo)<-paste(colnames(xxx_xo), "_vs_XO",sep="") 
xxy_xo<- xxy - xoMean
colnames(xxy_xo)<-paste(colnames(xxy_xo), "_vs_XO",sep="") 
xxyy_xo<- xxyy - xoMean
colnames(xxyy_xo)<-paste(colnames(xxyy_xo), "_vs_XO",sep="") 

xyy_xo<- xyy - xoMean
colnames(xyy_xo)<-paste(colnames(xyy_xo), "_vs_XO",sep="") 


#
mydata2<-cbind(Probe=rownames(xxx_xo), xxx_xo, xxy_xo, xxyy_xo, xyy_xo, nv_m_f)

mydata3<-cbind(Probe=rownames(all.samples),all.samples)

colnames(mydata3)[2:length(mydata3)]<- paste(colnames(mydata3)[2:length(mydata3)],"exp",sep=".")

ratio.exp<-merge(mydata2,mydata3,by.x="Probe",by.y="Probe")




#Contrast analysis 

TS<- paste(targets.lcl$CELL_LINE , targets.lcl$SCV_GROUP, sep="_")

TS <- factor(TS, levels=unique(TS)) 
design <- model.matrix(~0+TS)

colnames(design) <- levels(TS) 
               
fit<- lmFit(eSet.lcl, design)
 
cont.anova <- makeContrasts(BL.XXX_vs_BL.XO= BL_XXX - BL_XO, 
BL.XXY_vs_BL.XO= BL_XXY - BL_XO, 
BL.XXYY_vs_BL.XO= BL_XXYY - BL_XO, 
BL.XYY_vs_BL.XO= BL_XYY - BL_XO, 
BL.NV.M_vs_BL.NV.F= BL_NV_M - BL_NV_F,
levels=design) 


fit2.anova<- contrasts.fit(fit, cont.anova)

#bayes
fitb<- eBayes(fit2.anova) 

#selecting the statistical cutoff

decide <- matrix(c("fdr",0.05, "fdr",0.1,"none",0.001,"none",0.005, "none", 0.01),nrow=5,ncol=2,byr=T)

# initialize:
mysum <- as.list(1:nrow(decide))
mynum <- 0
maxmax <- 0

for (test in 1:nrow(decide)){
    results<-decideTests(fitb, adjust.method=decide[test,1],p=as.numeric(decide[test,2]))

   summary(results) -> mysum[[test]]
   mynum[test] <-length(which(apply(results,1,function(x)any(x,na.rm=T))))
   maxmax <- max(c(maxmax, as.vector(mysum[[test]][c(1,3),])))
}

pdf("5_threshold_selection.pdf", width=13,height=6)

par(mfrow=c(1,nrow(decide)))
for (test in 1:nrow(decide))
{
as.numeric(as.vector(mysum[[test]][3,]))->plotMe1
as.numeric(as.vector(mysum[[test]][1,]))->plotMe2
maxData = max(plotMe1)
maxData2 = max(plotMe2)

barplot(plotMe1,horiz=T,col="red",xlim=c(-maxmax,maxmax),
main=paste("Gene Changes \np<",decide[test,2], ", " , decide[test,1],
" (" ,mynum[test] ,")",sep=""))->yy
barplot(-plotMe2,horiz=T,col="green",add=T)->yy

xx<-vector("integer",ncol(mysum[[test]]))
text(xx,yy,colnames(mysum[[test]]))
text((plotMe1+10)*0 + .9*maxData,yy+0.1,format(plotMe1,digits=3))
text((-plotMe2-10)*0 - .9*maxData2,yy+0.1,format(plotMe2,digits=3))
}
dev.off()


#select here the chosen paramaters
chosen.adjust<-"fdr"
chosen.p<-0.05
current.contrast<-"contrast"


results<-decideTests(fitb,adjust.method=chosen.adjust,p=as.numeric(chosen.p))
#change p value and adjust method to get a reasonable gene list


#plotting the selected threshold for the selected contrasts
summary(results)->mysum05
mysum05_no<-length(which(apply(results,1,function(x)any(x,na.rm=T))))
maxmax<-max(as.vector(mysum05[c(1,3),]))

pdf("5_selected contrast.pdf", width=10,height=10)

as.numeric(as.vector(mysum05[3,]))->plotMe1
as.numeric(as.vector(mysum05[1,]))->plotMe2
maxData = max(plotMe1)
maxData2 = max(plotMe2)

barplot(plotMe1,horiz=T,col="red",xlim=c(-maxmax,maxmax), main=paste("Gene Changes, FDR p<0.05 (",mysum05_no,")",sep=""))->yy
barplot(-plotMe2,horiz=T,col="green",add=T)->yy
xx<-vector("integer",ncol(mysum05))
text(xx,yy,colnames(mysum05))
text((plotMe1+10)*0 + .9*maxmax,yy,format(plotMe1,digits=3))
text((-plotMe2-10)*0 - .9*maxmax,yy,format(plotMe2,digits=3))

dev.off()

write.fit(fitb,file="dummy.xls",adjust=chosen.adjust,results=results)
treat.de<-read.table(file="dummy.xls",head=T)
dim(treat.de)
#


#output for contrasts

myNames<-names(treat.de)
res.col<- which(regexpr("Res.",myNames)>0)

anovalist<- which(apply(treat.de[,res.col],1,function(x)any(x,na.rm=T)))

length(anovalist)



treat.de.anova<-treat.de[anovalist,]
dim(treat.de.anova )


fitsel.tre2<-merge(treat.de.anova, annot, by.x="ID",by.y="Array_Address_Id") 
colnames(fitsel.tre2)[1]<-"Probe"

##note here, the data used Array_Address_Id as ProbeID, not as usually we use

fitsel.ratio<-merge(fitsel.tre2,ratio.exp, by.x="Probe", by.y="Probe")

myNames <-names(fitsel.ratio)
#selects the relevant columns for output
res.col<- which(regexpr("Res.",myNames)>0)
coefs.col <- which(regexpr("Coef.",myNames)>0)
ts.col<- coefs.col+length(coefs.col)
pvals.col <- which(regexpr("p.value.",myNames)>0) 
endcolumns.start<-length(fitsel.ratio)-(length(mydata2)-2)
endcolumns.end<-length(fitsel.ratio)

fitsel.ratio2<-cbind(
Probe= fitsel.ratio$Probe, 
Accession=fitsel.ratio$Accession, 
Symbol=fitsel.ratio$Symbol, 
Definition=fitsel.ratio$Definition,
fitsel.ratio[,coefs.col],
fitsel.ratio[,pvals.col],
F=fitsel.ratio$F,
F.p.value=fitsel.ratio$F.p.value,
fitsel.ratio[,res.col],
fitsel.ratio[,ts.col],
AverageExpr= fitsel.ratio$A,
fitsel.ratio[,58:183],
fitsel.ratio[,31:57]
)

dim(fitsel.ratio2)

fitsel.ratio2<-fitsel.ratio2[order(fitsel.ratio2$F,decreasing=T),]
write.table(fitsel.ratio2,file="significant_geneList_FDR0.05.csv",sep=",",row.names=F)

pdf("6_hist_pvalue.pdf", height=8,width=15)
par(mfrow=c(2,3))
for (k in 1:5){
hist(fitb$p.value[,k], main=colnames(fitb$p.value)[k],xlab="p.value-distribution", br=80,col="skyblue")
}
dev.off()

pdf("6_anova_heatDiagram.pdf",width=15,height=10)
par(mfrow=c(2,3))
par(mar=c(2,3,3,3))
par(oma=c(2,2,3,2))

for (k in 1:5){
heatDiagram(results,fitb$coef, primary=k, cex=0.6, orientation="portrait", low="green",high="red", ncolors=123, mar=c(1.5,1.5,4.5,3.5))
}
dev.off()

#venn
sumV <- apply(summary(results),2,function(x) x[1]+x[3])
v <- paste(names(sumV),sumV,sep="-")

pdf("6_venn.pdf", width=21,height=10)
par(mfrow=c(1,2))

vennDiagram(results[,c(1,2,3)],names=c(v[1],v[2],v[3]),main="FDR p<0.05", include=c("up","down"),counts.col=c(2,3), cex=1)
vennDiagram(results[,c(1,2,3)],names=c(v[1],v[2],v[3]),main="FDR p<0.05", cex=1)

vennDiagram(results[,c(3,4,5)],names=c(v[3],v[4],v[5]),main="FDR p<0.05", include=c("up","down"),counts.col=c(2,3), cex=1)
vennDiagram(results[,c(3,4,5)],names=c(v[3],v[4],v[5]),main="FDR p<0.05", cex=1)
dev.off()


#heatmap 

toplot<-fitsel.ratio2[order(fitsel.ratio2$F,decreasing=T),33:81]
rownames(toplot)<-toplot$Probe
dim(toplot)

top1000<- toplot[1:1000,]

top2<- fitsel.ratio2[fitsel.ratio2$Res.BL.NV.M_vs_BL.NV.F!=0,72:81]
dim(top2)

colu1<-c(rep("blue",9), rep("magenta",10), rep("gold4",10), rep("yellow",10), rep("purple",10))

pdf("7_anova_heatmap.pdf", height=10,width=10)

heatmap.2(as.matrix(top1000), col=rev(redgreen(60)), main="FDR p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, ColSideColors=colu1,cexRow=0.5, keysize=1, labRow = "")

heatmap.2(as.matrix(top1000), col=rev(redgreen(60)), main="FDR,  p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, cexRow=0.5, keysize=1, ColSideColors=colu1, dendrogram = "row", Colv=FALSE, labRow = "")

heatmap.2(as.matrix(top1000[,1:39]), col=rev(redgreen(60)), main="FDR p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, ColSideColors=colu1[1:39],cexRow=0.5, keysize=1, labRow = "")

heatmap.2(as.matrix(top1000[,1:39]), col=rev(redgreen(60)), main="FDR,  p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, cexRow=0.5, keysize=1, ColSideColors=colu1[1:39], dendrogram = "row", Colv=FALSE, labRow = "")


heatmap.2(as.matrix(top2), col=rev(redgreen(60)), main=" BL.NV.M vs BL.NV.F, FDR p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, cexRow=0.5, keysize=1, labRow = "")

heatmap.2(as.matrix(top2), col=rev(redgreen(60)), main=" BL.NV.M vs BL.NV.F, FDR,  p<0.05", trace="none", breaks=(c(-6,-5.5,-5,-4.5,-4,-3.5,-3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)), cexCol=0.5, cexRow=0.5, keysize=1, dendrogram = "row", Colv=FALSE, labRow = "")

dev.off()



#complete list of genes
fitsel.treAll<-merge(treat.de, annot, by.x="ID", by.y="Array_Address_Id")
colnames(fitsel.treAll)[1]<-"Probe"

fitsel.ratioAll<-merge(fitsel.treAll,ratio.exp)

myNames <-names(fitsel.ratioAll)
#selects the relevant columns for output
res.col<- which(regexpr("Res.",myNames)>0)
coefs.col <- which(regexpr("Coef.",myNames)>0)
ts.col<- coefs.col+length(coefs.col)
pvals.col <- which(regexpr("p.value.",myNames)>0) 
endcolumns.start<-length(fitsel.ratio)-(length(mydata2)-2)
endcolumns.end<-length(fitsel.ratio)

fitsel.ratioN<-cbind(
Probe= fitsel.ratioAll$Probe, 
Accession=fitsel.ratioAll$Accession, 
Symbol=fitsel.ratioAll$Symbol, 
Definition=fitsel.ratioAll$Definition,
fitsel.ratioAll[,coefs.col],
fitsel.ratioAll[,pvals.col],
F=fitsel.ratioAll$F,
F.p.value=fitsel.ratioAll$F.p.value,
fitsel.ratioAll[,res.col],
fitsel.ratioAll[,ts.col],
AverageExpr= fitsel.ratioAll$A,
fitsel.ratioAll[,58:183],
fitsel.ratioAll[,31:57]
)

fitsel.ratioN<-fitsel.ratioN[order(fitsel.ratioN$F,decreasing=T),]
write.table(fitsel.ratioN, "complete_genelist.csv" ,sep=",",row.names=F)


