setwd("G:/STUDY/2015-9169_mothcha/combined_DE")
	
# Loading packages-------------------

library (Biobase)
library(marray)
library (limma)
library(RColorBrewer)
library(MASS)
library(gplots)
library(heatmap.plus)

targets<-read.csv(file="targets_combined.csv", header=T)
labls<- targets$SampleName
phD <- targets[,c(6,7)]
rownames(phD)<-labls
metadata<-data.frame(labelDescription=c("SampleName", "C9Cell"), row.names= c("SampleName", "C9Cell"))
pD<-new("AnnotatedDataFrame",data=phD, varMetadata=metadata)

###reading the dataset

data<-read.ilmn (files="iPS_combined_signals.txt", expr="AVG_Signal", ctrlfiles= "iPS_combined_control.txt", other.columns="Detection.Pval", sep="\t", quote="\"", verbose=TRUE)
colnames(data$E)

raw_data<-data$E
colnames(raw_data)

detsco.p<- data$other$Detection.Pval
colnames(detsco.p)
detsco<-1- detsco.p

colnames(raw_data)<-labls
colnames(detsco)<-labls
colnames(detsco.p)<-labls

mydata=log2(raw_data)
matriz <- as.matrix(mydata)
dim(mydata)

annot <- read.csv(file="HumanHT-12_V4_0_R2_15002873_B_092015.csv", header=T)
dim(annot)

mydata1<-mydata[1:47188,]
dim(mydata1)
detsco.p1<- detsco.p[1:47188,]
detsco1<- 1-detsco.p1## 

# signal plots--
nsampl=39
   
c9<-as.vector(targets$C9Cell)
c9[targets$C9Cell =="control"]<-"pink"
c9[targets$C9Cell =="carrier"]<-"gold4"
c9[targets$C9Cell =="ko"]<-"blue"

batch=as.vector(targets$Batch)
batch[targets$Batch==1]<- "magenta"
batch[targets$Batch==2]<- "cyan"
batch[targets$Batch==3]<- "orange"
batch[targets$Batch==4]<- "green"
batch[targets$Batch==5]<- "purple"

jpeg("1_signal.jpg", width=1300,height=800)
par(cex.axis=0.5)
boxplot(as.data.frame(mydata1),main="Signal Not normalized",col=batch, names=labls, las=3,adj=1)
dev.off()

# signal distribution plots-
jpeg("1-signal_distribution.jpg", width=1300,height=800)

par(mfrow=c(6,7))
for (k in 1:39){
   plot(density(mydata1[,k]), main=paste("signal, ", labls[k], sep=""), cex=0.8)
}
dev.off()

jpeg("1-detsco-distribution_p.jpg", width=1300,height=800)

par(mfrow=c(6,7))
for (k in 1:39){
   plot(density(detsco.p1[,k]), main=paste("detection p-value, ", labls[k], sep=""), cex=0.8)
}
dev.off()


jpeg("1_detsco_check%d.jpg", width=1300,height=800)

#detection scores
par(cex.axis=0.5)
boxplot(as.data.frame(detsco1),main="Detection scores",names=labls, col=batch,las=3)
abline(h=0.9, col="red")
#abline(h=0.8, col="blue")
par(cex.axis=0.5)
boxplot(as.data.frame(detsco.p1),main="Detection p-value",names=labls, col=batch,las=3)
dev.off()


thresholds<-c(0.99,0.98,0.97,0.96)
pdf("1-detsco_stats.pdf",height=9,width=18)
par (mfrow = c(2,2))
for (thr in thresholds) {
apply(detsco1,2,function(x)length(which(x>thr)))->detsco.table
grn<-detsco.table/nrow(mydata)
#grn<-grn[sort(names(grn))]
col<-batch
#col<-as.character(as.numeric(Samples$strain))
grn.m<-mean(grn)
grn.sd<- sd(grn)
sd1p<-grn.m+(grn.sd)
sd1m<-grn.m-(grn.sd)

sd2p<-grn.m+(grn.sd*2)
sd2m<-grn.m-(grn.sd*2)
sd3p<-grn.m+(grn.sd*3)
sd3m<-grn.m-(grn.sd*3)
    par(cex.axis=0.5)

plot(x=1:nsampl,y=grn,col=col,pch=19,xaxt="n",main=paste("Detection Threshold = ",thr,sep=""),xlab="",ylab=paste("Fraction Detected at ",thr,sep=""))
axis(1,at=1:nsampl,labels=names(grn),las=2)
#legend(x="topright",fill=unique(col),as.character(unique(Samples$Batch[order(Samples$Array)])),cex=0.9,bty="n")
abline(sd1p,0,lty=2,col=1)
abline(sd1m,0,lty=2, col=1)

abline(sd2p,0,lty=2,col=3)
abline(sd2m,0,lty=2, col=3)
abline(sd3p,0,lty=2, lwd=2,col=2)
abline(sd3m,0,lty=2,lwd=2,col=2)
text(sd1m,"1SD",pos=1)
text(sd3m,"3SD",pos=1)
text(sd2m,"2SD",pos=1)
}
dev.off()


#histogram
probes99<-apply(detsco1,1,function(x)length(which(x>=0.99)))

pdf("1-detsco_hist.pdf",height=10,width=10)
hist(probes99,br=nsampl,col="blue", main="Distribution of present genes")
axis(side=4,at= length(probes99)*seq(0,0.5,0.1),labels= seq(0,50,10))
dev.off()

 jpeg("1_signal_detsco.jpg", width=1300,height=800)

par (mfrow = c(6,7))
for(k in 1:nsampl)
plot(x=mydata1[,k], y=detsco1[,k],cex=0.4, main=labls[k],xlab="log2 signal",ylab="Detection score")
#detection score vs. log2 signal 

dev.off()

# signal correlation plots [before normalization]--------------

colnames(mydata1)<-labls
matriz<-as.matrix(mydata1) 
matcor<-cor(matriz)
range(as.vector (matcor))

clab<-cbind(c9,batch)
pdf("2_corr_heatmap_notNorm.pdf", width=10,height=10)
heatmap.plus(matcor, trace="none",scale="none",col=heat.colors(40), ColSideColors=clab, cexCol=0.6,cexRow=0.6, main="Clustering, Not normalized ",keysize=1)
dev.off()

# signal correlation plots 

pdf("2_AIC_all.pdf", width=13,height=10)
IAC=cor(mydata1,use="p")
cluster1=hclust(as.dist(1-IAC))
plot(cluster1, main=paste("All samples (no=",dim(IAC)[2],")"))
dev.off()

meanIAC=apply(IAC,2,mean)
sdCorr=sd(meanIAC)
numbersd=(meanIAC-mean(meanIAC))/sdCorr
y=length(IAC[1,])
x=(mean(IAC)*(y^2)-y)/((y^2)-y)

pdf("2_sd_all.pdf",width=10,height=10)
plot(numbersd, type="n", main="all samples", ylab="z-score",) 
text(numbersd, labels=labls, cex=0.9,col="red")
#abline(h=-2, col=4)
abline(h=-3, col=5)
dev.off()

# Outlier exclusion :

##
removeSamples = match(c("Neuropathic_3", "Neuropathic_4r"), colnames(matriz))
removeSamples  

matriz.g<-matriz[, -removeSamples]
targets.g<-targets[-removeSamples,]
labls.g<-labls[-removeSamples]
group.g<-group[-removeSamples]
batch.g<-batch[-removeSamples]
clab.g<-clab[-removeSamples,]
pD.g<-pD[-removeSamples]

jpeg("1_signal_rm1outlier_rmtech.jpg", width=1300,height=800)
par(cex.axis=0.6)
boxplot(as.data.frame(matriz.g),main="Signal Not normalized,exclude 1 outlier and 1 tech repl",col=batch.g, names=labls.g, las=3,adj=1)
dev.off()

matcor.g<-cor(matriz.g)
pdf("2_corr_heatmap_notNorm_rm1.pdf", width=10,height=10)
heatmap.plus(matcor.g,scale="none",col=heat.colors(40), ColSideColors=clab.g, cexCol=0.7,cexRow=0.7, main=" Not normalized, exclude 1 outlier and 1 tech")
dev.off()

#  normalization--
norm <- neqc(data, negctrl="negative", regular="regular", offset=16, 
robust=FALSE, detection.p="Detection")

jpeg("3_normalized.jpg", width=1300,height=800)
par(cex.axis=0.5)
boxplot(as.data.frame(norm$E),main="Quantile normalization", col= batch,names=labls, las=3)
dev.off()


#after normalization array signal correlation
colnames(norm)<-labls
matcorN<-cor(norm$E)
range(matcorN) 

pdf("3_corr_heatmap_Norm.pdf", width=10,height=10)
heatmap.plus(matcorN,trace="none",scale="none",col=heat.colors(40),ColSideColors=clab, cexCol=0.6,cexRow=0.6, main="normalized" , keysize=1)
dev.off()

###combat
# Apply combat to adjust batch effect

samName<-labls
combat.list<- as.data.frame(cbind(samName,targets[,c(10,7)]))
colnames(combat.list)<- c("SampleName", "Batch","C9Cell")
 
write.xls(norm$E,file="ComBatExpr.xls", quote=F)
write.xls(combat.list,file="ComBatList.txt",quote=F)
 
source("ComBat.R",local=T)
ComBat("ComBatExpr.xls","ComBatList.txt")
# Creating the exprSet object-

#Read in ComBat adjusted data
norm_adj<-read.table("Adjusted_ComBatExpr.xls_.xls", header=T)
rownames(norm_adj)<- rownames(norm)
norm_adj<-as.matrix(norm_adj)

range(cor(norm_adj))

jpeg("3_normalized_rmBE.jpg", width=1300,height=800)
par(cex.axis=0.5)
boxplot(as.data.frame(norm_adj),main="Quantile normalization, adjusted batch effect", col= batch,names=colnames(norm_adj), las=3)
dev.off()

matcorN<-cor(norm_adj)
range(matcorN) 
 
pdf("3_corr_heatmap_Norm.pdf", width=10,height=10)
heatmap.plus(matcorN,trace="none",scale="none",col=heat.colors(40),ColSideColors=clab, cexCol=0.6,cexRow=0.6, main="normalized, adjusted batch effect" , keysize=1)
dev.off()


# Creating the exprSet object--

eSet <- new("ExpressionSet", exprs=(norm_adj), phenoData=pD)
eSet	
ftdexp<-exprs(eSet)


#---Array clustering based on gene variability


standardize <- function(z) {
  rowmed <- apply(z, 1, median)
  rowmad <- apply(z, 1, mad)
  rv <- sweep(z, 1, rowmed)
  rv <- sweep(rv, 1, rowmad, "/")
  return(rv)
}

rowMads <- apply(ftdexp, 1, mad)

#---top 1000 variable genes-------------------

ord <- order(rowMads,decreasing=TRUE)
top1000 <- ord[1:1000]
ftdexp2 <- ftdexp[top1000, ]
ftddist2 <- dist(t(standardize(ftdexp2)))

summary(ftddist2) 

ftdcl2 <- hclust(ftddist2)
ftddism2<-as.matrix(ftddist2)

#---top 500 variable genes-------------------
top500 <- ord[1:500]
ftdexp3 <- ftdexp[top500, ]
ftddist3 <- dist(t(standardize(ftdexp3)))

ftdcl3 <- hclust(ftddist3)
ftddism3<-as.matrix(ftddist3)

#heatmaps
pdf("4_clst_heatmap_mostVariable.pdf", width=10,height=10)
heatmap.plus(ftddism2, trace="none",col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main=" Top 1000 Most Variable Genes, rm BE", ColSideColors= clab, cexRow=0.5,cexCol=0.5, scale="none",keysize=1)
heatmap.plus(ftddism3, col=rev(heat.colors(75)), distfun=function(x) as.dist(x), main="Top 500 Most Variable Genes, rm BE ", trace="none", ColSideColors= clab, cexRow=0.5,cexCol=0.5, scale="none",keysize=1)
dev.off()


#---MDS-------------------
cm1 <- cmdscale(ftddist2, eig=TRUE)
pdf("4_MDS.pdf", width=20,height=10)
par(mfrow=c(1,2))
myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=c9, pch=19, xlim=c(-40,40),...)
#check the colors in the above command

myPlot(cm1, main="C9, adjusted batch effect")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels=labls,adj=0, cex=0.7)

legend(x="topleft",legend=unique(targets$C9Cell),col=unique(c9),fill= unique(c9), cex=1.2)

myPlot <- function(x, ...)
  plot(x$points, xlab="Component 1", ylab="Component 2", lwd=4,col=batch, pch=19, xlim=c(-40,40),...)
#check the colors in the above command

myPlot(cm1, main="Batch, adjusted batch effect")
chw <- par()$cxy[1]
text(x=cm1$points[,1]+(0.3*chw),y=cm1$points[,2],main="MDS", lwd=4,labels=labls,adj=0, cex=0.7)
dev.off()

#  Ratio 
#all samples
all.samples<-as.data.frame(ftdexp)

#ratios for heatmap and ratio output
#1. Controls, each group as a control
contr.con<-all.samples[,targets$C9Cell=="control"] 
contrM.con <-rowMeans(contr.con)

contr.car<-all.samples[,targets$C9Cell=="carrier"] 
contrM.car <-rowMeans(contr.car)

#2. Exp, each group as a treatment

exp.car <- all.samples[,targets$C9Cell=="carrier"] 
exp.ko <- all.samples[,targets$C9Cell=="ko"] 


#3. Ratios

car.con<- exp.car - contrM.con
colnames(car.con)<-paste(colnames(car.con), "_vs_control" ,sep="")

ko.con<- exp.ko - contrM.con
colnames(ko.con)<-paste(colnames(ko.con), "_vs_control" ,sep="")

ko.car<- exp.ko - contrM.car
colnames(ko.car)<-paste(colnames(ko.car), "_vs_carrier" ,sep="")

#exporting all the data
mydata2<-cbind(Probe=rownames(car.con), car.con, ko.con,ko.car)

mydata3<-cbind(Probe=rownames(all.samples),all.samples)

colnames(mydata3)[2:length(mydata3)]<- paste(colnames(mydata3)[2:length(mydata3)],"expr",sep=".")

ratio.exp<-merge(mydata2,mydata3,by.x="Probe",by.y="Probe")


#-------------Contrast analysis ------

TS<- targets$C9Cell

TS <- factor(TS, levels=unique(TS)) 
design <- model.matrix(~0+TS)

colnames(design) <- levels(TS) 
colnames(design)
# [1] "control" "carrier" "ko" 

fit<- lmFit(eSet, design)
  
cont.anova <- makeContrasts(C9.carrier_vs__C9.control=carrier-control,
C9.ko_vs__C9.control=ko-control, 
C9.ko_vs__C9.carrier=ko-carrier, 
levels=design) 


fit2.anova<- contrasts.fit(fit, cont.anova)

#bayes
fitb<- eBayes(fit2.anova) 

#selecting the statistical cutoff

decide <- matrix(c("fdr",0.05, "fdr",0.1,"none",0.001,"none",0.005, "none", 0.01),nrow=5,ncol=2,byr=T)

# initialize:
mysum <- as.list(1:nrow(decide))
mynum <- 0
maxmax <- 0

for (test in 1:nrow(decide)){
    results<-decideTests(fitb, adjust.method=decide[test,1],p=as.numeric(decide[test,2]))

   summary(results) -> mysum[[test]]
   mynum[test] <-length(which(apply(results,1,function(x)any(x,na.rm=T))))
   maxmax <- max(c(maxmax, as.vector(mysum[[test]][c(1,3),])))
}

pdf("5_threshold_selection.pdf", width=13,height=6)

par(mfrow=c(1,nrow(decide)))
for (test in 1:nrow(decide))
{
as.numeric(as.vector(mysum[[test]][3,]))->plotMe1
as.numeric(as.vector(mysum[[test]][1,]))->plotMe2
maxData = max(plotMe1)
maxData2 = max(plotMe2)

barplot(plotMe1,horiz=T,col="red",xlim=c(-maxmax,maxmax),
main=paste("Gene Changes \np<",decide[test,2], ", " , decide[test,1],
" (" ,mynum[test] ,")",sep=""))->yy
barplot(-plotMe2,horiz=T,col="green",add=T)->yy

xx<-vector("integer",ncol(mysum[[test]]))
text(xx,yy,colnames(mysum[[test]]))
text((plotMe1+10)*0 + .9*maxData,yy+0.1,format(plotMe1,digits=3))
text((-plotMe2-10)*0 - .9*maxData2,yy+0.1,format(plotMe2,digits=3))
}
dev.off()


#select here the chosen paramaters
chosen.adjust<-"fdr"
chosen.p<-0.05
current.contrast<-"contrast"


results<-decideTests(fitb,adjust.method=chosen.adjust,p=as.numeric(chosen.p))
#change p value and adjust method to get a reasonable gene list


#plotting the selected threshold for the selected contrasts
summary(results)->mysum05
mysum05_no<-length(which(apply(results,1,function(x)any(x,na.rm=T))))
maxmax<-max(as.vector(mysum05[c(1,3),]))

pdf("5_selected_contrast.pdf", width=10,height=10)

as.numeric(as.vector(mysum05[3,]))->plotMe1
as.numeric(as.vector(mysum05[1,]))->plotMe2
maxData = max(plotMe1)
maxData2 = max(plotMe2)

barplot(plotMe1,horiz=T,col="red",xlim=c(-maxmax,maxmax), main=paste("Gene Changes, fdr p<0.05 (",mysum05_no,")",sep=""))->yy
barplot(-plotMe2,horiz=T,col="green",add=T)->yy
xx<-vector("integer",ncol(mysum05))
text(xx,yy,colnames(mysum05))
text((plotMe1+10)*0 + .9*maxmax,yy,format(plotMe1,digits=3))
text((-plotMe2-10)*0 - .9*maxmax,yy,format(plotMe2,digits=3))

dev.off()


write.fit(fitb,file="dummyf.xls", digits=15,adjust=chosen.adjust,results=results)
treat.de<-read.table(file="dummyf.xls",head=T)
dim(treat.de)
#  


#output for contrasts

myNames<-names(treat.de)
res.col<- which(regexpr("Res.",myNames)>0)

anovalist<- which(apply(treat.de[,res.col],1,function(x)any(x,na.rm=T)))

length(anovalist)
#  

treat.de.anova<-treat.de[anovalist,]
dim(treat.de.anova )
#  

fitsel.tre2<-merge(treat.de.anova, annot, by.x="ID",by.y="Probe_Id") 
colnames(fitsel.tre2)[1]<-"Probe"

fitsel.ratio<-merge(fitsel.tre2,ratio.exp, by.x="Probe", by.y="Probe")

myNames <-names(fitsel.ratio)
#selects the relevant columns for output
res.col<- which(regexpr("Res.",myNames)>0)
coefs.col <- which(regexpr("Coef.",myNames)>0)
ts.col<- coefs.col+length(coefs.col)
pvals.col <- which(regexpr("p.value.",myNames)>0) 
endcolumns.start<-length(fitsel.ratio)-(length(mydata2)-2)
endcolumns.end<-length(fitsel.ratio)

fitsel.ratio2<-cbind(
Probe= fitsel.ratio$Probe, 
Accession=fitsel.ratio$Accession, 
Symbol=fitsel.ratio$Symbol, 
Definition=fitsel.ratio$Definition,
fitsel.ratio[,coefs.col],
fitsel.ratio[,pvals.col],
F=fitsel.ratio$F,
F.p.value=fitsel.ratio$F.p.value,
fitsel.ratio[,res.col],
fitsel.ratio[,ts.col],
AverageExpr= fitsel.ratio$A,
fitsel.ratio[,47:113],
fitsel.ratio[,c(20:29,32:40,42:46)])

dim(fitsel.ratio2)


fitsel.ratio2<-fitsel.ratio2[order(fitsel.ratio2$F,decreasing=T),]
write.csv(fitsel.ratio2,file="significant_geneList_fdr0.05_adjustedBE.csv")


pdf("6_hist_pvalue.pdf", height=8,width=10)
par(mfrow=c(2,2))
for (k in 1:3){
hist(fitb$p.value[,k], main=colnames(fitb$p.value)[k],xlab="p.value-distribution", br=80,col="skyblue")
}
dev.off()


pdf("6_anova_heatDiagram.pdf",width=15,height=10)
par(mfrow=c(1,3))
par(mar=c(2,3,3,3))
par(oma=c(2,2,3,2))

for (k in 1:3){

heatDiagram(results,fitb$coef, primary=k, cex=0.6, orientation="portrait", low="green",high="red", ncolors=123, mar=c(1.5,1.5,4.5,3.5))
}
dev.off()

#venn
sumV <- apply(summary(results),2,function(x) x[1]+x[3])
v <- paste(names(sumV),sumV,sep="--")

pdf("6_venn.pdf", width=21,height=10)
par(mfrow=c(1,2))

vennDiagram(results[,c(1,2,3)],names=c( v[1],v[2],v[3]),main="fdr p<0.05", include=c("up","down"),counts.col=c(2,3), cex=1)
vennDiagram(results[,c(1,2,3)],names=c( v[1],v[2],v[3]),main="fdr p<0.05", cex=1)
dev.off()


#heatmap 
 

toplot<-fitsel.ratio2[order(fitsel.ratio2$F,decreasing=T),23:50]
rownames(toplot)<-fitsel.ratio2$Probe

colu<-c(rep("purple",24), rep("yellow",2),rep("cyan",2))

pdf("7_anova_heatmap.pdf", height=10,width=10)
heatmap.2(as.matrix(toplot), scale="none", col=rev(redgreen(64)), main=" fdr p<0.05", trace="none", breaks=(c(-7,-6.5,-6,-5.5,-5,-4.5,-4,-3.5, -3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7 )), cexCol=0.6, cexRow=0.6, ColSideColors=colu, keysize=1, labRow = "")
heatmap.2(as.matrix(toplot), col=rev(redgreen(64)), main="fdr p<0.05", trace="none", breaks=(c(-7,-6.5,-6,-5.5,-5,-4.5,-4,-3.5, -3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7 )), cexCol=0.6, cexRow=0.6, keysize=1, ColSideColors=colu,dendrogram = "row", Colv=FALSE, labRow = "")
heatmap.2(as.matrix(toplot), scale="none", col=rev(redblue(64)), main=" fdr p<0.05", trace="none", breaks=(c(-7,-6.5,-6,-5.5,-5,-4.5,-4,-3.5, -3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7 )), cexCol=0.6, cexRow=0.6, ColSideColors=colu, keysize=1, labRow = "")
heatmap.2(as.matrix(toplot), col=rev(redblue(64)), main="fdr p<0.05", trace="none", breaks=(c(-7,-6.5,-6,-5.5,-5,-4.5,-4,-3.5, -3,-2.5,-2,-1.5,seq(-1,1,0.05),1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7 )), cexCol=0.6, cexRow=0.6, keysize=1, ColSideColors=colu,dendrogram = "row", Colv=FALSE, labRow = "")
dev.off()

#complete list of genes
fitsel.treAll<-merge(treat.de, annot, by.x="ID",by.y="Probe_Id")  
colnames(fitsel.treAll)[1]<-"Probe"

fitsel.ratioAll<-merge(fitsel.treAll,ratio.exp)

myNames <-names(fitsel.ratioAll)
#selects the relevant columns for output
res.col<- which(regexpr("Res.",myNames)>0)
coefs.col <- which(regexpr("Coef.",myNames)>0)
ts.col<- coefs.col+length(coefs.col)
pvals.col <- which(regexpr("p.value.",myNames)>0) 
endcolumns.start<-length(fitsel.ratio)-(length(mydata2)-2)
endcolumns.end<-length(fitsel.ratio)

fitsel.ratioN<-cbind(
Probe= fitsel.ratioAll$Probe, 
Accession=fitsel.ratioAll$Accession, 
Symbol=fitsel.ratioAll$Symbol, 
Definition=fitsel.ratioAll$Definition,
fitsel.ratioAll[,coefs.col],
fitsel.ratioAll[,pvals.col],
F=fitsel.ratioAll$F,
F.p.value=fitsel.ratioAll$F.p.value,
fitsel.ratioAll[,res.col],
fitsel.ratioAll[,ts.col],
AverageExpr= fitsel.ratioAll$A,
fitsel.ratioAll[,47:113],
fitsel.ratioAll[,c(20:29,32:40,42:46)])

dim(fitsel.ratioN)
fitsel.ratioN<-fitsel.ratioN[order(fitsel.ratioN$F,decreasing=T),]
write.csv(fitsel.ratioN, "complete_genelist_adjustedBE.csv" )
